{
    "collab_server" : "",
    "contents" : "# basic plots in ggplot . \n\n# loading mpg dataset and plotting using ggplot\nggplot(data = mpg)+geom_point(mapping = aes(x = drv, y = class))\n\n# asthetic mappigns for visualizing classes of points. So they can be distinguished from the class theu belong\nggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,color = class))\n\n# mapping size aesthetic with classes\nggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,size = class))\n\n# alpha aesthetic mapping with class\nggplot(data = mpg) + geom_point(mapping = aes(x = displ,  y = hwy, alpha = class))\n\n# mapping shape aesthetic to the class\n\nggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = class))\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),color = \"blue\") # when mapping ...\n#  ... color , write it outside asthetic . Color will be applied on the whole mapping \n#  .. and not inside asthetic function.\n\nggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = class, alpha = class, size = class))\n\n# stroke asthetics\nggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, stroke = displ), shape = 21)\n\n# mapping aesthetic to non variable names\nggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,color = displ <5))\n\n# faceting the data with facet_wrap\nggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = displ < 5)) + \n  facet_wrap(~hwy,nrow = 2)\n\n# facetign data using facet_grid\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy , color = displ < 5)) +\n  facet_grid(drv ~ cyl)\n\n# geom_smooth geom\nggplot(data = mpg) + geom_smooth(mapping = aes(x = displ, y = hwy))\n\n# line type aesthetic in geom\nggplot(data = mpg) + geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))\n\n# grouping in geom \nggplot(data = mpg) + geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))\n\n# color in geom\nggplot(data = mpg)+ geom_smooth(mapping = aes(x = displ, y = hwy, color = drv))\n\n# multiple geoms in single plot\nggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + \n  geom_smooth(mapping = aes(x = displ, y = hwy))\n\n# global mappings for multiple geoms.\nggplot(data = mpg, mapping = aes(x = displ, y = hwy))+\n  geom_point()+\n  geom_smooth()\n\n# local and global mappings\nggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +\n  geom_point(mapping = aes(color = drv))+\n  geom_smooth()\n\n# using filter in geoms\nggplot(data = mpg, mapping = aes(x = displ, y = hwy))+\n  geom_point(mapping = aes(color = drv)) +\n  geom_smooth(data = filter(mpg, class == \"subcompact\"), se = FALSE)\n\n# line chart, boxplot, histogram, area chart\nggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +\n  geom_line(mapping = aes(color = drv))\nggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +\n  geom_boxplot(mapping = aes(color = drv)) +\n  geom_area(mapping =aes(color = drv))\n\n# code for graph generation in ex 3.6\n\nggplot(data = mpg, mapping = aes(x = displ, y = hwy))+\n  geom_point(size = 4, color = \"white\") + \n  geom_point(mapping = aes(color = drv)) +\n  geom_smooth(se = FALSE, mapping = aes(linetype = drv))\n\n# statistical transformations testing\nggplot(data = diamonds) + \n  geom_bar(mapping = aes(x = cut))\n\n# over riding default stat\ndemo <- tribble(\n  ~cut, ~freq,\n  \"Fair\",1610,\n  \"Good\",4906,\n  \"Very Good\",12081,\"Premium\", 13791,\"Ideal\",21551)\nggplot(data = demo) +\n  geom_bar(mapping = aes(x = cut, y = freq),stat = \"identity\")\n\n#over ride default mapping from transformed variables to asthetics\nggplot(data = demo) +\n  geom_bar(mapping = aes(x = cut , y = ..prop..,group = 1))\n\n# generating summary of statstical transformations ..\nggplot(data = demo)+\nstat_summary(mapping = aes(x = cut, y = depth),\n             fun.ymin = min,\n             fun.ymax = max,\n             fun.y = median\n             )\n\n# color , fill asthetics\nggplot(data = demo)+\ngeom_bar(mapping = aes(x = cut, color = cut))\nggplot(data = demo)+\n  geom_bar(mapping = aes(x = cut, fill = cut))\nggplot(data = diamonds, mapping = aes(x = cut, color = clarity))+\n  geom_bar(fill = NA,position = \"identity\")\n\n# jitter\nggplot(data = mpg)+\n  geom_point(mapping = aes(x = displ, y = hwy), position = \"jitter\")\n\n# positional arguments exercise\nggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +\n  geom_point(position =\"jitter\", alpha = 0.5) +\n  geom_smooth(method =\"lm\")\n\nggplot(data = mpg, mapping = aes(x=drv, y=cty, fill=as.factor(cyl))) +\n  geom_boxplot(position = \"dodge\")\n\n# testing coordinates flip\n\nggplot(data = mpg, mapping = aes(x=drv, y=cty, fill=as.factor(cyl))) +\n  geom_boxplot(position = \"dodge\") +\n  coord_flip() +\n  labs(fill = \"cylinders\")\n\n# testing coordinates with quick map for maps\n\n# without quick map\nnz <- map_data(\"nz\")\nggplot(data = nz, mapping = aes(long, lat, group = group))+\n  geom_polygon(fill = \"white\", color = \"black\") +\n  coord_polar()\n\n# with quick map\nnz <- map_data(\"nz\")\nggplot(data = nz, mapping = aes(long, lat, group = group))+\n  geom_polygon(fill = \"white\", color = \"black\") +\n  coord_quickmap()\n\n# geom_abline plots\nggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +\n  geom_point() +\n  geom_abline() +\n  coord_fixed()\n",
    "created" : 1514360351696.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1190864552",
    "id" : "DF4EF38C",
    "lastKnownWriteTime" : 1514375705,
    "last_content_update" : 1514375705175,
    "path" : "~/Desktop/Art of r Programming/Basics for R/ggplot_basics.R",
    "project_path" : "Basics for R/ggplot_basics.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}